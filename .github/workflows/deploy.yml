name: deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    # services: # Contenedor de docker con imagenes de los servicios que necesita el proyecto (ej: bases de datos, cache, etc.)
    #   redis:
    #     image: redis
    #     ports:
    #       - 6379:6379
    
    steps:
      # - name: Install redis cli
      #   run: sudo apt-get update -y && sudo apt-get install redis-tools -y  # -y se pasa como argumento a la espera de si requiere confirmación de la instalación

      # - name: Test redis
      #   run: redis-cli -h localhost -p 6379 ping

      - name: Print secret variable
        run: echo "${{ secrets.TOKEN_SECRET}}" # Aunque el comando se ejecuta, GitHub censura el secreto
      
      - name: checkout
        uses: actions/checkout@v4

      - name: setup                            # Configuración del entorno como herramientas, lenguajes (node, python, etc.)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies            # Instalación de dependencias del proyecto
        run: npm install

      - name: Run tests                        # Ejecución de pruebas unitarias
        run: npm run test
  
      - name: Run build
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: public/
  deploy:
    # if: ${{ always() }} # Ejecuta el job independientemente del resultado del job anterior, condicionales respecto al contexto
    
    runs-on: ubuntu-latest

    needs: build                            # Indica que este job depende de la finalización del job build

    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }} # URL de la página desplegada

    permissions: # Permisos que se le otorgan al job
      pages: write # Permite escribir en el repositorio, necesario para desplegar en GitHub Pages
      id-token: write # Permite generar un token de acceso para autenticar el despliegue

    steps:
      - name: Init deployment
        run: echo "Deploying..."

      - name: Deploy
        id: deploy-pages
        uses: actions/deploy-pages@v4

  # notify:
  #   runs-on: ubuntu-latest

  #   needs: deploy

  #   if: always() # Ejecuta este job independientemente del resultado del job deploy

  #   steps:
  #     - name: Notify to slack
  #       uses: 8398a7/action-slack@v4
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # URL del webhook de Slack para enviar notificaciones
  #       with:
  #         status: ${{ job.status }} # Estado del job (success, failure, etc.)
  #         fields: workflow, job, commit, author, message # Campos a mostrar en la notificación